install turbo

We need CLI commands for:
	- starting app in long running process
		- index.php is a cli-invoked script takes the name of the main class, runs static checks, starts queue worker, calls [orchestrate on that main class] inside our event loop

Named renderers for the purpose of portable links that don't break in transit
	- instead of checking for url combinations matching requestDetails, we check for name but while building the combination so that on hit, we simply extract the name
Url map generation
	- for each pattern, we treat it as if it's requestDetails (by setting it as requestDetails)
	- if it's not the end of the thread (contains a _prefixFor), we create a sub to contain the patterns below it


C:\wamp64\www\tilwa\nmeri\tilwa\vendor\bin>phpunit ../../tests/

**
sqlite
<server name="DB_CONNECTION" value="sqlite"/>
<server name="DB_DATABASE" value=":memory:"/>


	- Illuminate\Testing\TestResponse: overwrite these in our extension
		- assertSee[x] (they need the `e` method)
		- assertView[x] (needs to convert our view to their View and pass that as response to testResponseBridge)

Wrap:
	- debug_backtrace

==when doesn't work==
	- crud:
		- index: use "_index" instead of leaving it blank
		- line 102
			- doesn't this return a regex that should be escaped/normalized? if that be the case, match incoming path against that pattern and return the result to this guy

	- flows:
		- finding in cache after job runs, consider delegating path fetching to outerFlowWrapper->dataPath (although there's a chance that prefix wasn't even added in the hydrator, see line 84)
		- [OuterFlowWrapperTest->test_empties_cache_entry_after_returning], write a sub test that checks the cache directly to confirm it was removed

	- tests:
		- mocks injected into modules => relevant test should create mock and manually trigger module booting before it runs. But first, check whether prophecy will work

	- conditional factory
		- [finally] => consider making factoryList a numeric array


test only and except from routeCollection


4) pending tests:
	- contracts\config
		- auth, router, tss


	- connect AlertAdapter/Bugsnag in interface loader
	- typesense search adapter
	- integrate cache library and remove the cache from moduleLevelTest->provideCriticalObjects and isolatedComponent->concreteBinds



next=> base route test. but first, refactor routeManager with above

refactor to just receive placeholders PathPlaceholders->replaceInPattern