install turbo

try to deploy on azure

when cacheManager is integrated:
	- refactor its usage wherever it appears in respect to accessing nested objects; tags etc
	- is the override pattern we're using good or can it be updated while in the cache?

#
work needed on updateReactor

on flow hit, upload the rest into the shared space for all users insted of simply discarding it

we need a cli command for copying laravel config/migrations files from the library locations to dev land i.e. so config can lift the files (from the hard-coded "config" folder)


##controllers and services

Bar:
	- app level service entry into repositories
	- orm in services
Extract rejection logic into a class and inject that into both service wrapper and executable classes. then implement an interface that informs these parents to run x whenever such interface is met [PrefersServices]

Allow what's passed into controller get assigned. But it should be  a wrapped subset. on call, rejection happens if unsatisfactory

Pending:
	- exception renderer
	- testing

Continue the refactor of reload renderer

Ensure the given type is an instance of current/active whenType. Check if any [getClass] caller uses the second argument

C:\wamp64\www\tilwa\nmeri\tilwa\vendor\bin>phpunit ../../tests/

Revisit ModuleHandlerIdentifierTest (low-hanging fruit) after fleshing flows (some have been defined in their collection) and login tests

**
sqlite
<server name="DB_CONNECTION" value="sqlite"/>
<server name="DB_DATABASE" value=":memory:"/>

**
inject an eloquent default for Tilwa\Contracts\Auth\UserHydrator (5)

flesh out SecureUser (3)

ApiAuthRepoTest line 52 (2)
	/

\PHPUnit\Framework\AssertionFailedError
Concerns\MakesHttpRequests, // overwrite their inputs (get, post etc) to instantiate properly our own environment. after the call is complete, convert the result to testResponse and return to the test
            Concerns\InteractsWithAuthentication,
            Concerns\InteractsWithDatabase



login controller should have a validator (4)
	the guys extending BaseAuthRepo are the ones where the validator should be planted
	check controllerManager->updateValidatorMethod

Wrap debug_backtrace

Whoever we're retrieving payload from should have only, all

hasFlowLeadingTo

Merge in-module errors with the general one when request matches that module

Illuminate\Testing\TestResponse: overwrite these
	assertSee[x], assertView[x], assertSession[x]

When troubleshooting routing, check routeManager line 166
