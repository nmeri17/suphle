install turbo

try to deploy on azure

when cacheManager is integrated:
	- refactor its usage wherever it appears in respect to accessing nested objects; tags etc
	- is the override pattern we're using good or can it be updated while in the cache?

#
work needed on updateReactor

on flow hit, upload the rest into the shared space for all users insted of simply discarding it

we need a cli command for copying laravel config/migrations files from the library locations to dev land i.e. so config can lift the files (from the hard-coded "config" folder)


##controllers and services

Bar:
	- app level service entry into repositories
	- orm in services

*Extract rejection logic into a class and inject that into both service wrapper and executable classes. then implement an interface that informs these parents to run x whenever such interface is met [PrefersServices]

*Now, we wanna block user on middleware. So this should prolly be promoted to the container and connected in a way (ConcreteDecorator) that the attached handler (in this case, PrefersServices) runs even when hydrating a concrete


*Allow what's passed into controller get assigned (rather enforcing a loadServices). But it should be a wrapped subset. on call, rejection happens if unsatisfactory
Note: assign freely but constructor should be void of calculations

Pending:
	- exception renderer
		- Merge in-module errors with the general one when request matches that module. First checks App->universalRenderers. When no overrides for current error is present, we check $activeModule->getHandlerFor(Error::class). That guy contains defaults that can be internally overidden

		- The handler needs:
			- the renderer
			- data for the above (gotten at runtime)
			- action that runs before rendering is done

		- Then, execute beginRequest in a try catch that works with the handler list

		- When this becomes the active handler, assign it to the relevant property on MHI so its ultimate response can be intercepted by the tester

	- testing



Ensure the given type is an instance of current/active whenType. Check if any [getClass] caller uses the second argument

C:\wamp64\www\tilwa\nmeri\tilwa\vendor\bin>phpunit ../../tests/

Revisit ModuleHandlerIdentifierTest (low-hanging fruit) after fleshing flows (some have been defined in their collection) and login tests

**
sqlite
<server name="DB_CONNECTION" value="sqlite"/>
<server name="DB_DATABASE" value=":memory:"/>


\PHPUnit\Framework\AssertionFailedError, Concerns\InteractsWithDatabase
	- extend and override getConnection (see portion of this doc on how to boot models)

	- Illuminate\Testing\TestResponse: overwrite these, then use the new trait/class in place of the above
		- assertSee[x] (they need the `e` method)
		- assertView[x] (needs to work with our view)
		- assertSession[x]

Complete the few methods left on FrontDoorTest
- Replace laravel with lumen

Wrap:
	- debug_backtrace
	- Session so we can configure its duration (an adapter)

hasFlowLeadingTo

on the tearDown methods, you wanna:
	- empty container
	- $model->truncate()

Repository transaction method:
	- Has to throw on error so dev can pick that up
	- Should be able to be turned off on a per-method basis
	- Should also lock i.e. lock for read, start transaction, update, close and release

==when doesn't work==
	- routing:
		- check routeManager line 166
			var_dump($pattern, $parsed, $renderer->getRouteMethod(), $this->routeCompare($parsed, $renderer->getRouteMethod()));

			/*
			string(10) "SEGMENT_id"
			string(12) "/SEGMENT/id/"
			string(3) "get"
			bool(true)*/
	- crud
		- index: use "_index" instead of leaving it blank
		- line 102
			- doesn't this return a regex that should be escaped/normalized? if that be the case, match incoming path against that pattern and return the result to this guy

	- models: are they setting each model's connection at some point? if yes, we'd have to do this for all the models of this particular orm
	- Think there's a static setConnection method

	- DB facade: class DB extends Illuminate\Database\Capsule\Manager {} in the global namespace fixed the problem


*Implement exception renderer so that auth test can work

test only and except from routeCollection
